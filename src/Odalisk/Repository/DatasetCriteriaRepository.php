<?php

namespace Odalisk\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * DatasetCriteriaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DatasetCriteriaRepository extends EntityRepository
{

    private $criteria;

    public function clear() {
        $em = $this->getEntityManager();
        $cmd = $em->getClassMetadata('Odalisk\Entity\Statistics');
        $connection = $em->getConnection();
        $dbPlatform = $connection->getDatabasePlatform();
        $connection->beginTransaction();
        try {
            $connection->query('SET FOREIGN_KEY_CHECKS=0');
            $q = $dbPlatform->getTruncateTableSql($cmd->getTableName());
            $connection->executeUpdate($q);
            $connection->query('SET FOREIGN_KEY_CHECKS=1');
            $connection->commit();
        }
        catch (\Exception $e) {
            $connection->rollback();
        }
    }

    public function getPortalAverages($portal) {
        $sth = $this->getEntityManager()
            ->getConnection()
            ->prepare('
                    SELECT
                        (SUM(is_title_and_summary) / COUNT(*)) as title_and_summary,
                        (SUM(is_released_on) / COUNT(*)) as creation_date,
                        (SUM(is_category) / COUNT(*)) as category,
                        (SUM(is_last_update_on) / COUNT(*)) as update_date,
                        (SUM(is_provider) / COUNT(*)) as person_in_charge,
                        (SUM(is_maintainer) / COUNT(*)) as maintainer,
                        (SUM(is_good_license) / COUNT(*)) as good_license,
                        (SUM(license_quality) / COUNT(*)) as license_quality,
                        (SUM(is_at_least_one_good_format) / COUNT(*)) as at_least_one_good_format
                    FROM dataset_criteria JOIN datasets ON dataset_criteria.id = datasets.criteria
                    WHERE datasets.portal_id = :portal_id
            ');
        $sth->execute(array('portal_id' => $portal->getId()));

        return($sth->fetch(\PDO::FETCH_ASSOC));
    }

}
